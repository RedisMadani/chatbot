@page "/"
@using Newtonsoft.Json;
@using System.Text;

<PageTitle>Chatbot</PageTitle>

<div class="container-fullscreen">
    <div class="neon-light"></div>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="messages">
                    @for (int i = 0; i < messages.Count; i++)
                    {
                        @if (i % 2 == 0)
                        {
                            <div class="message question">@messages[i]</div>
                        }
                        else
                        {
                            <div class="message response">@messages[i]</div>
                        }
                    }
                </div>
                <div class="textMessage">
                    <input @bind="apiKey" type="password" placeholder="Enter your API key..." />
                    <input @bind="message" placeholder="Type your message..." />
                    <span>
                        <button class="sendButton" onclick="@SendMessage">Send</button>
                    </span>
                    <span>
                        <button class="deleteButton" onclick="@DeleteChat">Delete</button>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    public string message;
    public string apiKey;
    public List<string> messages = new List<string>();
    public bool showKey;

    private static HttpClient Http = new HttpClient();

    protected override async Task OnInitializedAsync()
    {

    }

    public async Task SendMessage()
    {
        if (string.IsNullOrEmpty(apiKey))
        {
            messages.Add("Please enter your API key.");
            return;
        }

        messages.Add(message);

        if (string.IsNullOrEmpty(message))
        {
            await Task.Delay(1000);
            messages.Add("Please enter your message.");
        }
        else
        {
            await GetOpenAIResponse();
        }

        message = string.Empty;
    }

    public void DeleteChat()
    {
        messages.Clear();
    }

    private async Task GetOpenAIResponse()
    {
        Http.DefaultRequestHeaders.Clear();
        Http.DefaultRequestHeaders.Add("Authorization", $"Bearer {apiKey}");

        var jsonContent = new
        {
            prompt = message,
            model = "text-davinci-003",
            max_tokens = 1000
        };

        try
        {
            var responseContent = await Http.PostAsync("https://api.openai.com/v1/completions", new StringContent(JsonConvert.SerializeObject(jsonContent), Encoding.UTF8, "application/json"));
            var resContext = await responseContent.Content.ReadAsStringAsync();
            var data = JsonConvert.DeserializeObject<dynamic>(resContext);

            if (data != null && data.choices != null && data.choices.Count > 0)
            {
                messages.Add(data.choices[0].text.ToString());
            }
        }
        catch (Exception ex)
        {
            messages.Add($"Error: {ex.Message}");
        }
    }
}
